{"ast":null,"code":"var _jsxFileName = \"/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/todos/Todos.js\";\nimport React from 'react';\nimport Todo from '../atomic/Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todos(_ref) {\n  let {\n    todo,\n    setTodo,\n    todosList,\n    setTodosList\n  } = _ref;\n  const addTaskURL = 'https://api-nodejs-todolist.herokuapp.com/task';\n  const loginToken = localStorage.getItem('LoginToken');\n  const token = localStorage.getItem('Token');\n  const getToken = loginToken || token; //post request\n\n  const postTask = () => {\n    fetch(addTaskURL, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + getToken,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"description\": todo\n      }),\n      redirect: 'follow'\n    }) //getting the value in text form\n    .then(response => response.text()) //consoling the value\n    .then(result => console.log(result)).catch(error => console.log('error', error));\n  };\n\n  const handleUserInput = e => {\n    setTodo(e.target.value);\n  }; //the handle enter function checks whether the key pressed by the user is enter key or not \n  //if true state changes and an object is created based on the user input\n\n\n  const handleEnter = e => {\n    if (e.key === \"Enter\") {\n      setTodosList([...todosList, {\n        description: todo,\n        //generating a random id for each todo\n        _id: Math.floor(Math.random() * 100000000)\n      }]);\n      postTask(); //setting the input to empty one last time to clear the input \n\n      setTodo('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: todo,\n      onChange: handleUserInput,\n      placeholder: \"Add todo\",\n      onKeyPress: handleEnter,\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todosList.slice().reverse().map(todo =>\n      /*#__PURE__*/\n      ///redering the todo component for each item in the list while passing the data we need to use in the todo\n      _jsxDEV(Todo, {\n        todoId: todo['_id'],\n        Todo: todo.description,\n        todosList: todosList,\n        setTodosList: setTodosList,\n        todoObject: todo\n      }, todo['_id'], false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_c = Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/todos/Todos.js"],"names":["React","Todo","Todos","todo","setTodo","todosList","setTodosList","addTaskURL","loginToken","localStorage","getItem","token","getToken","postTask","fetch","method","headers","Authorization","body","JSON","stringify","redirect","then","response","text","result","console","log","catch","error","handleUserInput","e","target","value","handleEnter","key","description","_id","Math","floor","random","slice","reverse","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,eAAe,SAASC,KAAT,OAA2D;AAAA,MAA5C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA;AAA5B,GAA4C;AACtE,QAAMC,UAAU,GAAG,gDAAnB;AAEA,QAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;AAEA,QAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAME,QAAQ,GAAGJ,UAAU,IAAIG,KAA/B,CAPsE,CAStE;;AACA,QAAME,QAAQ,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAACP,UAAD,EAAa;AACdQ,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAE,YAAYL,QAA5B;AACT,wBAAgB;AADP,OAFK;AAIdM,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,uBAAejB;AAAjB,OAAf,CAJQ;AAKdkB,MAAAA,QAAQ,EAAE;AALI,KAAb,CAAL,CAOA;AAPA,KAQCC,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASA;AATA,KAUCF,IAVD,CAUMG,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVhB,EAWCG,KAXD,CAWOC,KAAK,IAAIH,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB,CAXhB;AAYH,GAbD;;AAeA,QAAMC,eAAe,GAAGC,CAAC,IAAI;AACzB3B,IAAAA,OAAO,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFD,CAzBsE,CA8BtE;AACA;;;AACA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACrB,QAAIA,CAAC,CAACI,GAAF,KAAU,OAAd,EAAsB;AACtB7B,MAAAA,YAAY,CACR,CAAC,GAAGD,SAAJ,EAAe;AACX+B,QAAAA,WAAW,EAAEjC,IADF;AAEX;AACAkC,QAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B;AAHM,OAAf,CADQ,CAAZ;AAOI3B,MAAAA,QAAQ,GARU,CASlB;;AACAT,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAbD;;AAeA,sBACI;AAAA,4BACI;AAAO,MAAA,KAAK,EAAED,IAAd;AAAoB,MAAA,QAAQ,EAAE2B,eAA9B;AAA+C,MAAA,WAAW,EAAC,UAA3D;AAAsE,MAAA,UAAU,EAAEI,WAAlF;AACA,MAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAA,gBACK7B,SAAS,CAACoC,KAAV,GAAkBC,OAAlB,GAA4BC,GAA5B,CAAgCxC,IAAI;AAAA;AACrC;AACA,cAAC,IAAD;AAEA,QAAA,MAAM,EAAEA,IAAI,CAAC,KAAD,CAFZ;AAGA,QAAA,IAAI,EAAEA,IAAI,CAACiC,WAHX;AAIA,QAAA,SAAS,EAAE/B,SAJX;AAKA,QAAA,YAAY,EAAEC,YALd;AAMA,QAAA,UAAU,EAAEH;AANZ,SACKA,IAAI,CAAC,KAAD,CADT;AAAA;AAAA;AAAA;AAAA,cAFC;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;KAlEuBD,K","sourcesContent":["import React from 'react'\r\nimport Todo from '../atomic/Todo'\r\n\r\nexport default function Todos({ todo, setTodo, todosList, setTodosList }) {\r\n    const addTaskURL = 'https://api-nodejs-todolist.herokuapp.com/task';\r\n\r\n    const loginToken = localStorage.getItem('LoginToken');\r\n\r\n    const token = localStorage.getItem('Token')\r\n\r\n    const getToken = loginToken || token\r\n\r\n    //post request\r\n    const postTask = () => {\r\n        fetch(addTaskURL, {\r\n            method: 'POST',\r\n            headers: {Authorization: 'Bearer ' + getToken, \r\n            \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ \"description\": todo }),\r\n            redirect: 'follow'\r\n        })\r\n        //getting the value in text form\r\n        .then(response => response.text())\r\n        //consoling the value\r\n        .then(result => console.log(result))\r\n        .catch(error => console.log('error', error))\r\n    }\r\n\r\n    const handleUserInput = e => {\r\n        setTodo(e.target.value)\r\n    }\r\n\r\n\r\n    //the handle enter function checks whether the key pressed by the user is enter key or not \r\n    //if true state changes and an object is created based on the user input\r\n    const handleEnter = e => {\r\n        if (e.key === \"Enter\"){\r\n        setTodosList(\r\n            [...todosList, { \r\n                description: todo, \r\n                //generating a random id for each todo\r\n                _id: Math.floor(Math.random() * 100000000)\r\n            }\r\n        ])\r\n            postTask()\r\n            //setting the input to empty one last time to clear the input \r\n            setTodo('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input value={todo} onChange={handleUserInput} placeholder=\"Add todo\" onKeyPress={handleEnter}\r\n            className='form-control'/>\r\n            <ul>\r\n                {todosList.slice().reverse().map(todo =>\r\n                ///redering the todo component for each item in the list while passing the data we need to use in the todo\r\n                <Todo\r\n                key={todo['_id']}\r\n                todoId={todo['_id']}\r\n                Todo={todo.description}\r\n                todosList={todosList}\r\n                setTodosList={setTodosList}\r\n                todoObject={todo}\r\n                />\r\n                    )}\r\n            </ul>\r\n    </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}