{"ast":null,"code":"var _jsxFileName = \"/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/api/ApiTodos.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ApiTodo from './ApiTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ApiTodos() {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const getTasksURL = 'https://api-nodejs-todolist.herokuapp.com/task';\n  const completedTasksUrl = 'https://api-nodejs-todolist.herokuapp.com/task?completed=true';\n  const loginToken = localStorage.getItem('LoginToken');\n  const token = localStorage.getItem('Token');\n  const getToken = loginToken || token;\n  console.log(loginToken);\n  useEffect(() => {\n    getCompleted();\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const response = await fetch(getTasksURL, {\n        method: 'GET',\n        headers: {\n          Authorization: getToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const result = await response.json();\n      const tasks = result.data;\n      console.log('this is tasks', tasks);\n      return setList([...tasks]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const getCompleted = async () => {\n    try {\n      const response = await fetch(completedTasksUrl, {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + getToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const result = await response.json();\n      const completed = result.data;\n      setCompletedTodos([...completed]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  console.log('completed', completedTodos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: list.slice().reverse().map(todo => /*#__PURE__*/_jsxDEV(ApiTodo, {\n      id: todo['_id'],\n      todo: todo['description'],\n      completed: todo['completed'],\n      getData: getData,\n      list: list,\n      setList: setList,\n      loginToken: loginToken\n    }, todo['_id'], false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ApiTodos, \"eQQhrYjc6dMQhKvRrTMjPn+gfDk=\");\n\n_c = ApiTodos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiTodos\");","map":{"version":3,"sources":["/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/api/ApiTodos.js"],"names":["React","useEffect","useState","ApiTodo","ApiTodos","list","setList","completedTodos","setCompletedTodos","getTasksURL","completedTasksUrl","loginToken","localStorage","getItem","token","getToken","console","log","getCompleted","getData","response","fetch","method","headers","Authorization","result","json","tasks","data","err","error","completed","textAlign","slice","reverse","map","todo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react';\r\nimport ApiTodo from './ApiTodo';\r\n\r\nexport default function ApiTodos(){\r\n    const [list, setList] = useState([])\r\n\r\n    const [completedTodos, setCompletedTodos] = useState([])\r\n    \r\n    const getTasksURL = 'https://api-nodejs-todolist.herokuapp.com/task';\r\n\r\n    const completedTasksUrl = 'https://api-nodejs-todolist.herokuapp.com/task?completed=true';\r\n\r\n    const loginToken = localStorage.getItem('LoginToken');\r\n\r\n    const token = localStorage.getItem('Token')\r\n\r\n    const getToken = loginToken || token\r\n\r\n    console.log(loginToken)\r\n\r\n    useEffect(() => {\r\n        getCompleted()\r\n        getData()\r\n    }\r\n    , [])\r\n\r\nconst getData = async()=> {\r\n    try{\r\n        const response = await fetch(getTasksURL, {\r\n            method: 'GET', \r\n            headers: { Authorization: getToken, \"Content-Type\": \"application/json\" },\r\n        })\r\n        const result = await response.json()\r\n        const tasks = result.data\r\n        console.log('this is tasks', tasks)\r\n        return setList([...tasks])\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n\r\nconst getCompleted = async () => {\r\n    try {\r\n        const response = await fetch(completedTasksUrl, {\r\n            method: 'GET', \r\n            headers: {Authorization: 'Bearer ' + getToken, \"Content-Type\": \"application/json\"}\r\n        });\r\n        const result = await response.json()\r\n        const completed = result.data\r\n        setCompletedTodos([...completed])\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\nconsole.log('completed', completedTodos)\r\n\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            {list.slice().reverse().map(todo =>\r\n            <ApiTodo \r\n            key={todo['_id']}\r\n            id={todo['_id']} \r\n            todo={todo['description']}\r\n            completed={todo['completed']}\r\n            getData={getData}\r\n            list={list}\r\n            setList={setList}\r\n            loginToken={loginToken}\r\n            />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}