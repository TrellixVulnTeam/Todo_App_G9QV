{"ast":null,"code":"var _jsxFileName = \"/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/atomic/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(_ref) {\n  _s();\n\n  let {\n    Todo,\n    todosList,\n    setTodosList,\n    todoId\n  } = _ref;\n  const [update, setUpdate] = useState(false);\n\n  const handleDelete = () => {\n    setTodosList(todosList.filter(task => task['_id'] !== todoId));\n  };\n\n  const handleUpdate = () => {\n    setUpdate(true);\n\n    if (update) {\n      setUpdate(false);\n    }\n  }; //if state is true \"it's changed to true because of the onclick event that's why we see the line-through effect\"\n\n\n  const styling = {\n    textDecoration: update && \"line-through\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      style: styling,\n      onClick: handleUpdate,\n      children: [Todo, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"ugk7DHy2bdhkRMN+O2VYRoURIPo=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/atomic/Todo.js"],"names":["React","useState","Todo","todosList","setTodosList","todoId","update","setUpdate","handleDelete","filter","task","handleUpdate","styling","textDecoration"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,IAAT,OAAyD;AAAA;;AAAA,MAA3C;AAAEA,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA;AAAjC,GAA2C;AACpE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,YAAY,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAACD,SAAS,CAACM,MAAV,CAAiBC,IAAI,IAC/BA,IAAI,CAAC,KAAD,CAAJ,KAAgBL,MADN,CAAD,CAAZ;AAGH,GAJD;;AAMA,QAAMM,YAAY,GAAG,MAAM;AACvBJ,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAGD,MAAH,EAAU;AACNC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GALD,CAToE,CAgBpE;;;AACA,QAAMK,OAAO,GAAG;AACZC,IAAAA,cAAc,EAAEP,MAAM,IAAI;AADd,GAAhB;AAIA,sBACI;AAAA,2BACI;AAAI,MAAA,KAAK,EAAEM,OAAX;AAAoB,MAAA,OAAO,EAAED,YAA7B;AAAA,iBACKT,IADL,oBACW;AAAQ,QAAA,OAAO,EAAEM,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOS;;GA5BWN,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function Todo({ Todo, todosList, setTodosList, todoId }) {\r\n    const [update, setUpdate] = useState(false)\r\n\r\n    const handleDelete = () => {\r\n        setTodosList(todosList.filter(task =>\r\n           task['_id'] !== todoId\r\n            ))\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        setUpdate(true)\r\n        if(update){\r\n            setUpdate(false)\r\n        }\r\n    }\r\n\r\n    //if state is true \"it's changed to true because of the onclick event that's why we see the line-through effect\"\r\n    const styling = { \r\n        textDecoration: update && \"line-through\"\r\n    }\r\n\r\n    return (\r\n        <div>  \r\n            <li style={styling} onClick={handleUpdate}>\r\n                {Todo} <button onClick={handleDelete}>X</button>\r\n                </li>\r\n                </div>\r\n                )\r\n            }"]},"metadata":{},"sourceType":"module"}