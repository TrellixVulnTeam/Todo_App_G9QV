{"ast":null,"code":"var _jsxFileName = \"/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/api/ApiTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoApi(_ref) {\n  _s();\n\n  let {\n    id,\n    todo,\n    completed,\n    setList,\n    list,\n    loginToken\n  } = _ref;\n  const [line, setLine] = useState(false);\n  const deleteTodoURL = `https://api-nodejs-todolist.herokuapp.com/task/${id}`;\n  const updateTaskULR = `https://api-nodejs-todolist.herokuapp.com/task/${id}`;\n  useEffect(() => {\n    setLine(completed);\n  }, []);\n\n  const deleteTodo = async () => {\n    try {\n      const res = await fetch(deleteTodoURL, {\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + loginToken,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(res);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const updateTodo = async value => {\n    try {\n      const response = await fetch(updateTaskULR, {\n        method: 'PUT',\n        headers: {\n          Authorization: 'Bearer ' + loginToken,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"completed\": value\n        })\n      });\n      console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteHandler = () => {\n    setList(list.filter(task => task['_id'] !== id));\n    deleteTodo();\n  };\n\n  const updateData = () => {\n    setLine(!line);\n    console.log('this is the line', line);\n    updateTodo(!line);\n  };\n\n  const styling = {\n    textDecoration: line && \"line-through\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      style: styling,\n      onClick: updateData,\n      children: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteHandler,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoApi, \"CZ87yw0cgMpK4kRkCRlyFg7psjY=\");\n\n_c = TodoApi;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApi\");","map":{"version":3,"sources":["/Users/yomnaali/Documents/Thetodo/Todo_App/src/components/api/ApiTodo.js"],"names":["React","useEffect","useState","TodoApi","id","todo","completed","setList","list","loginToken","line","setLine","deleteTodoURL","updateTaskULR","deleteTodo","res","fetch","method","headers","Authorization","console","log","err","error","updateTodo","value","response","body","JSON","stringify","deleteHandler","filter","task","updateData","styling","textDecoration"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,OAAT,OAAmE;AAAA;;AAAA,MAAlD;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,OAAvB;AAAgCC,IAAAA,IAAhC;AAAsCC,IAAAA;AAAtC,GAAkD;AAC9E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAMU,aAAa,GAAI,kDAAiDR,EAAG,EAA3E;AAEA,QAAMS,aAAa,GAAI,kDAAiDT,EAAG,EAA3E;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACL,SAAD,CAAP;AACC,GAFI,EAGP,EAHO,CAAT;;AAKA,QAAMQ,UAAU,GAAG,YAAW;AAC9B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,aAAD,EAAgB;AACnCK,QAAAA,MAAM,EAAE,QAD2B;AAEnCC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAE,YAAYV,UAA7B;AAAyC,0BAAgB;AAAzD;AAF0B,OAAhB,CAAvB;AAIAW,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH,KAND,CAME,OAAOO,GAAP,EAAY;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACH;AACJ,GAVG;;AAYJ,QAAME,UAAU,GAAG,MAAMC,KAAN,IAAgB;AAC/B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACH,aAAD,EAAgB;AACxCI,QAAAA,MAAM,EAAE,KADgC;AAExCC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,YAAYV,UADtB;AAEL,0BAAgB;AAFX,SAF+B;AAMxCkB,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,uBAAaJ;AAAf,SAAf;AANkC,OAAhB,CAA5B;AAQAL,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACH,KAVD,CAUE,OAAOJ,GAAP,EAAY;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd;AACH;AACJ,GAdD;;AAgBI,QAAMQ,aAAa,GAAG,MAAM;AACxBvB,IAAAA,OAAO,CAACC,IAAI,CAACuB,MAAL,CAAYC,IAAI,IACpBA,IAAI,CAAC,KAAD,CAAJ,KAAgB5B,EADZ,CAAD,CAAP;AAGIU,IAAAA,UAAU;AACT,GALT;;AAOA,QAAMmB,UAAU,GAAG,MAAM;AACrBtB,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,IAAhC;AACAc,IAAAA,UAAU,CAAC,CAACd,IAAF,CAAV;AACH,GAJD;;AAMJ,QAAMwB,OAAO,GAAG;AACZC,IAAAA,cAAc,EAAEzB,IAAI,IAAI;AADZ,GAAhB;AAIA,sBACQ;AAAA,4BACI;AAAI,MAAA,KAAK,EAAEwB,OAAX;AAAoB,MAAA,OAAO,EAAED,UAA7B;AAAA,gBACK5B;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGS;AAAQ,MAAA,OAAO,EAAEyB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHT;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAOC;;GAhEuB3B,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nexport default function TodoApi({ id, todo, completed, setList, list, loginToken}){\r\n    const [line, setLine] = useState(false)\r\n\r\n    const deleteTodoURL = `https://api-nodejs-todolist.herokuapp.com/task/${id}`;\r\n\r\n    const updateTaskULR = `https://api-nodejs-todolist.herokuapp.com/task/${id}`;\r\n\r\n    useEffect(() => {\r\n        setLine(completed)\r\n        }\r\n    , [])\r\n    \r\n    const deleteTodo = async() => {\r\n    try {\r\n        const res = await fetch(deleteTodoURL, {\r\n            method: 'DELETE',\r\n            headers: { Authorization: 'Bearer ' + loginToken, \"Content-Type\": \"application/json\" },\r\n        });\r\n        console.log(res)\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\n\r\nconst updateTodo = async(value) => {\r\n    try {\r\n        const response = await fetch(updateTaskULR, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Authorization: 'Bearer ' + loginToken,\r\n                \"Content-Type\": \"application/json\" \r\n            },\r\n            body: JSON.stringify({ \"completed\": value })\r\n        })\r\n        console.log(response)\r\n    } catch (err) {\r\n        console.error(err);\r\n    }\r\n}\r\n    \r\n    const deleteHandler = () => {\r\n        setList(list.filter(task =>\r\n            task['_id'] !== id \r\n            ))\r\n            deleteTodo()\r\n            }\r\n    \r\n    const updateData = () => {\r\n        setLine(!line) \r\n        console.log('this is the line', line)\r\n        updateTodo(!line)\r\n    }\r\n\r\nconst styling = { \r\n    textDecoration: line && \"line-through\"\r\n}\r\n\r\nreturn (\r\n        <div>\r\n            <li style={styling} onClick={updateData}>\r\n                {todo} \r\n            </li><button onClick={deleteHandler}>X</button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}